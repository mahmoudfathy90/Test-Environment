name: Test Control  work flow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    environment: testing
    env:
      ANDROID_COMPILE_SDK: ${{ secrets.ANDROID_COMPILE_SDK }}
      ANDROID_BUILD_TOOLS: 33.0.0
      JAVA_VERSION: 17

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.ANDROID_COMPILE_SDK }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS }}

      - name: Run Lint
        run: ./gradlew lint

  test:
    runs-on: ubuntu-latest
    environment: testing
    env:
      ANDROID_COMPILE_SDK: ${{ secrets.ANDROID_COMPILE_SDK }}
      ANDROID_BUILD_TOOLS: 33.0.0
      JAVA_VERSION: 17

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.ANDROID_COMPILE_SDK }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS }}

      - name: Run Tests
        id: run_tests
        run: ./gradlew test

      - name: Save Unit Test Output
        if: failure() && steps.run_tests.outcome == 'failure'
        run: |
          mkdir -p test-results/unit
          cp -r app/build/test-results/testDebugUnitTest/* test-results/unit/

      - name: Archive Unit Test Results
        if: failure() && steps.run_tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: unit-test-results
          path: test-results/unit

  build:
    needs: test
    runs-on: ubuntu-latest
    environment: testing
    env:
      ANDROID_COMPILE_SDK: ${{ secrets.ANDROID_COMPILE_SDK }}
      ANDROID_BUILD_TOOLS: 33.0.0
      JAVA_VERSION: 17
      USER_NAME: ${{ secrets.USER_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Set up Android SDK
        uses: android-actions/setup-android@v2
        with:
          api-level: ${{ env.ANDROID_COMPILE_SDK }}
          build-tools: ${{ env.ANDROID_BUILD_TOOLS }}

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Build with Gradle
        run: ./gradlew build

      - name: Print environment variable
        run: echo "The compile SDK is set to $ANDROID_COMPILE_SDK and the user name is ${{ env.USER_NAME }}"

  report:
    needs: [build , lint]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: output information
        run: |
          echo "some thing went wrong"
          echo "${{ github }}"
          
